"use strict";function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,n,s){return n&&e(t.prototype,n),s&&e(t,s),t}}();!function(){var e=function(){function e(t,n,s){_classCallCheck(this,e),this.tasks=[],this.name=t,void 0!==n&&(this.team=n),this.mentorsPriorityList=void 0!==s?s:[]}return _createClass(e,[{key:"setMark",value:function(e,t){this.studMarks.push(_defineProperty({},e.id,t))}},{key:"marks",set:function(e){this.studMarks=e},get:function(){return this.studMarks}},{key:"name",set:function(e){this.studName=e},get:function(){return this.studName}}]),e}(),t=function r(e,t){_classCallCheck(this,r),this.taskTitle=e,this.taskExecutors=void 0!==t?t:[]},n=function(){function e(t,n){_classCallCheck(this,e),this.name=t,this.teamTeammates=void 0!==n?n:[]}return _createClass(e,[{key:"addTeammate",value:function(e){this.teamTeammates.push(e)}}]),e}(),s=function i(e,t){_classCallCheck(this,i),this.name=e,this.preferredStudentsList=void 0!==t?t:[]},a={add:function(r,i){switch(r){case"student":var o=new e(i.name,i.team,i.mentorsList);return a.students.push(o),console.log("Added new Student."),console.dir(o),o;case"task":var u=new t(i.title,i.executors);return a.tasks.push(u),console.log("Added new Task."),console.dir(u),u;case"team":var c=new n(i.name,i.teammates);return a.teams.push(c),console.log("Added new Team."),console.dir(c),c;case"mentor":var l=new s(i.name,i.preferredStudents);return a.mentors.push(l),console.log("Added new Mentor."),console.dir(l),l}},students:[],mentors:[],tasks:[],teams:[]};new e("Никита");window.Lib=a}();
//# sourceMappingURL=data:application/json;base64,

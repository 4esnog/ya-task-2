"use strict";function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();!function(){var e=function a(){_classCallCheck(this,a)},t=function(e){function t(e,r,n,s){_classCallCheck(this,t);var i=_possibleConstructorReturn(this,Object.getPrototypeOf(t).call(this));return i.studentId=e,i.studentTasks=[],i.name=r,i.preferredMentorsList=void 0!==n?n:[],i}return _inherits(t,e),_createClass(t,[{key:"addPreferredMentor",value:function(e,t){if("number"!=typeof t&&isNaN(e))throw new Error("Приоритет должен быть числом.");if(t=parseInt(t),e instanceof s||(e=o.select(selector)),!(e instanceof s))throw new Error("В список менторов можно добавлять только менторов.");var r=this.studentPreferredMentorsList.indexOf(e);return-1!==r&&this.studentPreferredMentorsList.splice(r,1),this.studentPreferredMentorsList.splice(t-1,0,e),this}},{key:"addTasks",value:function(e){var t=arguments.length<=1||void 0===arguments[1]?!1:arguments[1],n=this,s=!1;if(e instanceof r){if(this.studentTasks.forEach(function(t,r,n){e==t.task&&(s=!0)}),s)return;var i={task:e,mark:0};if(this.studentTasks.push(i),t)return;e.addExecutors(this,!0)}else Array.isArray(e)&&e.forEach(function(e,r,i){if(e=o.select("item"),n.studentTasks.forEach(function(t,r,n){e==t.task&&(s=!0)}),!s){var a={task:e,mark:0};n.studentTasks.push(a),t||e.addExecutors(n,!0)}});return this}},{key:"removeTasks",value:function(e){var t=this;return e.forEach(function(e,r,n){var s=o.select(e);if(!s)return void console.log("Задание "+e+" не найдено.");var i=t.studentTasks.indexOf(s);-1!==i&&t.studentTasks.splice(i,1)}),this}},{key:"setMark",value:function(e,t){var n=o.select(e);if(!(n&&n instanceof r))throw new Error("Задание "+e+" не найдено.");return this.studentTasks.forEach(function(e,r,s){e.task==n&&(e.mark=t)}),this}},{key:"id",set:function(e){throw new Error("Нельзя менять ID.")},get:function(){return this.studentId}},{key:"name",set:function(e){this.studentName=e},get:function(){return this.studentName}},{key:"team",set:function(e){this.studentTeam=e},get:function(){return this.studentTeam}},{key:"preferredMentorsList",set:function(e){if(!Array.isArray(e))throw new Error("Список должен быть массивом.");e=e.map(function(e,t,r){var n=o.select(e);return n instanceof s||(n=!1),n}),this.studentPreferredMentorsList=e.filter(function(e,t,r){return e!==!1})},get:function(){return this.studentPreferredMentorsList}}]),t}(e),r=function(e){function r(e,t,n,s){_classCallCheck(this,r);var i=_possibleConstructorReturn(this,Object.getPrototypeOf(r).call(this));return i.taskId=e,i.title=t,i.content=n,i.taskExecutors=void 0!==s?s:[],i}return _inherits(r,e),_createClass(r,[{key:"addExecutors",value:function(e){var r=arguments.length<=1||void 0===arguments[1]?!1:arguments[1],s=this;if(e instanceof t||item instanceof n){if(e in this.taskExecutors)return;if(this.taskExecutors.push(e),r)return;e.addTasks(this,!0)}else Array.isArray(e)&&e.forEach(function(e,i,a){if(e=o.select(e),!(e instanceof t&&e instanceof n))throw new Error("Задание можно дать только студенту или команде");e in s.taskExecutors||(s.taskExecutors.push(e),r||e.addTasks(s,!0))});return this}},{key:"removeExecutors",value:function(e){var t=this;return e.forEach(function(e,r,n){var s=o.select(e);if(!s)return void console.log("Студент "+e+" не найден.");var i=t.taskExecutors.indexOf(s);-1!==i&&t.taskExecutors.splice(i,1)}),this}},{key:"id",set:function(e){throw new Error("Нельзя менять ID.")},get:function(){return this.taskId}},{key:"title",set:function(e){this.taskTitle=e},get:function(){return this.taskTitle}},{key:"content",set:function(e){this.taskContent=e},get:function(){return this.taskContent}},{key:"executors",get:function(){return this.taskExecutors}}]),r}(e),n=function(n){function s(e,t,r){_classCallCheck(this,s);var n=_possibleConstructorReturn(this,Object.getPrototypeOf(s).call(this));return n.teamId=e,n.name=t,n.teamTasks=[],n.teammates=void 0!==r?r:[],n}return _inherits(s,n),_createClass(s,[{key:"addTeammates",value:function(r){return r instanceof e?this.teamTeammates.push(r):Array.isArray(r)&&r.forEach(function(e,r,n){if(e=o.select(e),!(e instanceof t))throw new Error("В команду можно добавить только студентов");this.teamTeammates.push(e)}),this}},{key:"removeTeammates",value:function(e){var t=this;return e.forEach(function(e,r,n){var s=o.select(e);s||console.log("Студент "+e+" не найден.");var i=t.teamTeammates.indexOf(s);-1!==i&&t.teamTeammates.splice(i,1)}),this}},{key:"addTasks",value:function(e){var t=arguments.length<=1||void 0===arguments[1]?!1:arguments[1],n=this,s=!1;if(e instanceof r){if(n.studentTasks.forEach(function(t,r,n){e==t.task&&(s=!0)}),s)return;var i={task:e,mark:0};if(this.teamTasks.push(i),t)return;e.addExecutors(this,!0)}else Array.isArray(e)&&e.forEach(function(e,r,i){if(e=o.select("item"),n.teamTasks.forEach(function(t,r,n){e==t.task&&(s=!0)}),!s){var a={task:e,mark:0};n.teamTasks.push(a),t||e.addExecutors(n,!0)}});return this}},{key:"removeTasks",value:function(e){var t=this;return e.forEach(function(e,r,n){var s=o.select(e);if(!s)return void console.log("Студент "+e+" не найден.");var i=t.teamTasks.indexOf(s);-1!==i&&t.teamTasks.splice(i,1)}),this}},{key:"setMark",value:function(e,t){var n=o.select(e);if(!(n instanceof r))throw new Error("Задание "+e+" не найдено.");return this.teamTasks.forEach(function(e,r,s){e.task==n&&(e.mark=t)}),this}},{key:"id",set:function(e){throw new Error("Нельзя менять ID.")},get:function(){return this.teamId}},{key:"name",set:function(e){this.teamName=e},get:function(){return this.teamName}},{key:"teammates",set:function(e){this.teamTeammates=e},get:function(){return this.teamTeammates}}]),s}(e),s=function(e){function r(e,t,n){_classCallCheck(this,r);var s=_possibleConstructorReturn(this,Object.getPrototypeOf(r).call(this));return s.mentorId=e,s.name=t,s.preferredStudentsList=void 0!==n?n:[],s}return _inherits(r,e),_createClass(r,[{key:"addPreferredStudent",value:function(e,r){if("number"!=typeof r&&isNaN(e))throw new Error("Приоритет должен быть числом.");if(r=parseInt(r),e instanceof t||(e=o.select(e)),!(e instanceof t))throw new Error("В список студентов можно добавлять только студентов.");var n=this.mentorPreferredStudentsList.indexOf(e);return-1!==n&&this.mentorPreferredStudentsList.splice(n,1),this.mentorPreferredStudentsList.splice(r-1,0,e),this}},{key:"id",set:function(e){throw new Error("Нельзя менять ID.")},get:function(){return this.mentorId}},{key:"name",set:function(e){this.mentorName=e},get:function(){return this.mentorName}},{key:"preferredStudentsList",set:function(e){if(("undefined"==typeof e?"undefined":_typeof(e))!==_typeof([]))throw new Error("Список должен быть массивом.");e=e.map(function(e,r,n){var s=o.select(e);return s instanceof t||(s=!1),s}),this.mentorPreferredStudentsList=e.filter(function(e,t,r){return e!==!1})},get:function(){return this.mentorPreferredStudentsList}}]),r}(e),i=0,o={add:function(e,a){if("undefined"==typeof e||0==e.length)throw new Error("Тип должен быть указан.");if("string"!=typeof e)throw new Error("Тип должен быть строкой");if("undefined"==typeof a||!("name"in a||"title"in a))throw new Error("Отсутствует 'options'. Задайте его хотя бы с одним свойством 'name' или 'title'.");if("object"!=("undefined"==typeof a?"undefined":_typeof(a)))throw new Error("Options должен быть объектом {}.");switch(e){case"student":var u=i++,f=new t(u,a.name,a.preferredMentorsList);if(a.team){var c=this.select(a.team);c||(c=o.add("team",{name:a.team})),f.team=c,c.addTeammates(f,!0)}return o.students.push(f),console.log("Added new Student: "+f.name+"."),f;case"task":var d=i++,h=new r(d,a.title,a.content);if(a.executors){var l=a.executors.map(function(e,r,s){var i=o.select(e);if(!i)throw new Error("Невозможно добавить несуществующего исполнителя "+e+".");if(!(i instanceof t||i instanceof n))throw new Error("Исполнитель должен быть студентом или командой.");return i});h.addExecutors(l)}return o.tasks.push(h),console.log("Added new Task: "+h.title+"."),h;case"team":var m=i++,p=new n(m,a.name);if(a.teammates){var k=a.teammates.map(function(e,r,n){var s=o.select(e);if(!s)throw new Error("Невозможно добавить в команду несуществующего студента "+e+".");if(!(s instanceof t))throw new Error("В команде могут состоять только студенты.");return s});p.addTeammates(k)}return o.teams.push(p),console.log("Added new Team: "+p.name+"."),p;case"mentor":var y=i++,v=new s(y,a.name,a.preferredStudentsList);return o.mentors.push(v),console.log("Added new Mentor: "+v.name+"."),v;default:throw new Error("Типа '"+e+"' не существует.")}},edit:function(e,t){if("undefined"==typeof e||0==e.length)throw new Error("Селектор должен быть указан.");if("string"!=typeof e&&"number"!=typeof e)throw new Error("Селектор должен быть строкой или числом");if("undefined"==typeof t)throw new Error("Отсутствует 'options'. Задайте его хотя бы с одним свойством.");if("object"!=("undefined"==typeof t?"undefined":_typeof(t)))throw new Error("Options должен быть объектом {}.");var r=this.select(e);for(var n in t)"id"!=n&&(r[n]=t[n]);return r},students:[],mentors:[],tasks:[],teams:[],select:function(t){var r=void 0;if("number"!=typeof t&&isNaN(t)){if("string"==typeof t){if(o.students.forEach(function(e,n,s){e.name!=t||r||(r=e)}),r)return r;if(o.mentors.forEach(function(e,n,s){e.name!=t||r||(r=e)}),r)return r;if(o.tasks.forEach(function(e,n,s){e.title!=t||r||(r=e)}),r)return r;if(o.teams.forEach(function(e,n,s){e.name!=t||r||(r=e)}),r)return r}else if(t instanceof e)return t}else{var t=parseInt(t);if(o.students.forEach(function(e,n,s){e.id!=t||r||(r=e)}),r)return r;if(o.mentors.forEach(function(e,n,s){e.id!=t||r||(r=e)}),r)return r;if(o.tasks.forEach(function(e,n,s){e.id!=t||r||(r=e)}),r)return r;if(o.teams.forEach(function(e,n,s){e.id!=t||r||(r=e)}),r)return r}return void 0==r?!1:r},getFinalPriorityList:function(){var e=[];return this.mentors.forEach(function(t,r,n){var s=t.preferredStudentsList,i=[],o=void 0;s.forEach(function(r,n,s){var o=r.preferredMentorsList,a=o.indexOf(t),u=!1;e.forEach(function(e,t,n){e.student==r&&(u=!0)}),-1==a||u||i.push({index:a+n,student:r})}),i.forEach(function(e,t,r){return 0==t?void(o=e):void(e.index<o.index&&(o=e))}),e.push({mentor:t,student:o.student,index:o.index})}),e}};window.Lib=o}(),Lib.add("student",{name:"Tolya",team:"TeamDino"}),Lib.add("student",{name:"Masha",team:"TeamDino"}),Lib.add("student",{name:"Andrew",team:"TeamDino"}),Lib.add("student",{name:"Petya",team:"TeamDino"}),Lib.add("mentor",{name:"Golodnov",preferredStudentsList:[0,2,3,4]}),Lib.add("mentor",{name:"Belaya",preferredStudentsList:[3,4,0,2]}),Lib.add("mentor",{name:"Chesnokov",preferredStudentsList:[4,3,2]}),Lib.select(0).preferredMentorsList=[5,6,7],Lib.select(2).preferredMentorsList=[5,6,7],Lib.select(3).preferredMentorsList=[7,6,5],Lib.select(4).preferredMentorsList=[6,5],console.time("a");var list=Lib.getFinalPriorityList();console.timeEnd("a");